--- 
title: "Ames Housing: 허위매물 탐지 프로젝트"
author: '일단잡1조(송성필, 홍주형, 편서영, 양현준)'
format: 
  dashboard:
    theme: sandstone
    scrolling: True
    logo: project/group1_project/imagebox/nofakehouse.png
    freeze: true
--- 
```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LassoCV
from sklearn.model_selection import train_test_split
import plotly.express as px
plt.rcParams['font.family'] = 'Malgun Gothic'
plt.rcParams['axes.unicode_minus'] = False
pd.set_option('display.max_columns', None)

######## 전처리 과정 ########
# 데이터 불러오기
ames = pd.read_csv('project/group1_project/ames.csv')
df = ames.copy()

# 그룹 분류 
df_ns = df.groupby('Neighborhood')['SalePrice'].mean()

# 분위수 계산
q1 = df_ns.quantile(0.25)
q2 = df_ns.quantile(0.75)

#df['price_level'] 이라는 칼럼으로 집값 별 분위로 구분
df['price_level'] = np.select(
    [
        df['Neighborhood'].isin(df_ns[df_ns <= q1].index),
        df['Neighborhood'].isin(df_ns[(df_ns > q1) & (df_ns <= q2)].index),
        df['Neighborhood'].isin(df_ns[df_ns > q2].index)
    ],
    ['Low', 'Mid', 'High'],
    default='Unknown'  #  문자열로 통일
)

# 범주형 컬럼만 선택
cat_cols = df.select_dtypes(include='object').columns
# 범주형 결측치 'None'으로 대체
df[cat_cols] = df[cat_cols].fillna('None')


df['amenities'] = (
    (df['PoolArea'] > 0).astype(int) +
    (df['TotalBsmtSF'] > 0).astype(int) +
    (df['GarageArea'] > 0).astype(int) + 
    (df['MiscVal'] > 0).astype(int)
)

df['TotalRooms'] = df['TotRmsAbvGrd'] + df['HalfBath'] + df['FullBath']  # 욕실 제외 방수 + 반욕실 + 풀욕실
df['RoomDensity'] = df['TotalRooms'] / df['GrLivArea']  # 방 밀도 (방수 / 거실 면적)
##### 허위매물 판단 #####


## 조건 : 기준값 상위 25% 이상
df['GrLivArea_th'] = (df['GrLivArea'] / df.groupby('price_level')['GrLivArea'].transform(lambda x: x.quantile(0.75))
)

df['YearRemodAdd_th'] = (df['YearRemodAdd'] / df.groupby('price_level')['YearRemodAdd'].transform(lambda x: x.quantile(0.75))
)

df['RoomDensity_th'] = (df['RoomDensity'] / df.groupby('price_level')['RoomDensity'].transform(lambda x: x.quantile(0.75))
)

# 지역들 분리하는 df 생성
high_df = df[df['price_level'] == 'High'].copy()
mid_df  = df[df['price_level'] == 'Mid'].copy()
low_df  = df[df['price_level'] == 'Low'].copy()

```


# {.sidebar}

## ## <span style="font-size: 14px;">에임즈 인트로</span> 
- 블라블라

## <span style="font-size: 14px;">연속형 > 박스플롯 / 범주형 > 그래프, 조건별 결과 </span>


1. 
2. 
3. 
4. 

## <span style="font-size: 14px;">회귀모델</span>

1. 
2. 

## <span style="font-size: 14px;">결론 및 보완점</span>

1. 
2. 
3. 결론
4. 분석의 제한점

# 인트로

## Row {height=20%}

### Column {width=50%}
:::{.card}
### <span style="font-size: 30px;">어디 있니 허위매물</span>

<img src="project/group1_project/imagebox/igotyou.png" alt="잡았다 요놈" style="width: 100%;">

- 에임스(Ames) 도시의 허위매물 탐지
:::

### Column {width=50%}
:::{.card}
### Ames 도시 특징
- 위치: 미국 아이오와주 중부, 디모인 북쪽 약 50km
- 인구: 약 66,000명 (2020년 기준)
- 특징: 
1. 아이오와 주립대학교 소재 (학생 수 약 30,000명, 전체 인구의 약 45%)
2. 안정된 주거 환경과 활발한 임대 시장 (임대 가구 비율 약 55%)
3. 젊은 인구 비중 높고 교육 중심 도시 (20~34세 인구 비중 약 40%)
:::

## Row {height=40%}

:::{.card}
### Ames 위치 및 지역 분포
```{python}
import plotly.express as px
# 색상 맵핑

color_map = {
    'High': '#e41a1c',   # 빨강
    'Mid': '#ff7f00',    # 주황
    'Low': '#4daf4a'     # 초록
}

# 지도 시각화

fig_map = px.scatter_mapbox(
    df,
    lat='Latitude',
    lon='Longitude',
    color='price_level',
    color_discrete_map=color_map,
    hover_name='Neighborhood',
    hover_data={
        'SalePrice': True,
        'price_level': True,
        'Latitude': False,
        'Longitude': False
    },
    zoom=12,
    height=600
)

# 스타일 및 레이아웃 설정
fig_map.update_layout(
    mapbox_style="open-street-map",
    mapbox_center={"lat": 42.03, "lon": -93.63},
    margin={"r": 0, "t": 0, "l": 0, "b": 0},
    legend=dict(
        title='Price Level',
        x=0.97, y=0.92,  # 살짝 아래로
        xanchor='right', yanchor='top',
        bgcolor='rgba(255, 255, 255, 0.6)',  # 반투명한 배경
        bordercolor='lightgray',
        borderwidth=1
    ),
    font=dict(size=14, color='black'),
)

```
fig_map.show()

- Ames 지역의 평균 주택가격 기준
- 상·중·하로 분류
- 각 점은 개별 주택을 의미
:::

## Row {height=30%}

### Column {width=50%}
:::{.card}
### Neighborhood 구역 구분
- **high, mid, low** 구역별 지역 이름 나열
- 도식화할 때 기준 및 방법 설명
:::

### Column {width=50%}
:::{.card}
### 구역별 주요 특성 시각화 (그래프)
- 각 구역별 평균 가격, 주택 상태 등 시각화
- [→ 그래프 시각화 필요!]

:::

## Row {height=20%}
:::{.card}
### 29개 Neighborhood 소개
- 각 지역 이름, 주요 특징 간단 요약
:::


# 샘플들

